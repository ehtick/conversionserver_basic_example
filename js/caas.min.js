var CaaS;(()=>{var a={912:a=>{let e,s="",t=null,r=null;async function n(a){let r={accessPassword:s,accessKey:t};a instanceof Array&&(r.itemids=a);try{let s=await fetch(e+"/caas_api/data/"+(r.itemids?"":a),{headers:{"CS-API-Arg":JSON.stringify(r)}});return await s.json()}catch(a){return{ERROR:"Conversion Service can't be reached"}}}a.exports={init:function(a,n=null){e=a,n&&(s=n.accessPassword?n.accessPassword:"",t=n.accessKey,r=n.webhook)},waitUntilConverted:async function(a,e=1e3){return new Promise((async(s,t)=>{let r=setInterval((async()=>{let e=await n(a);"PENDING"!=e.conversionState&&(clearInterval(r),s(e.conversionState))}),e)}))},getInfo:async function(){let a={accessPassword:s,accessKey:t},r=await fetch(e+"/caas_api/info",{headers:{"CS-API-Arg":JSON.stringify(a)}});return await r.json()},uploadModelFromFile:async function(a,n=""){let c=new FormData;c.append("file",fs.createReadStream(a));let i={webhook:r,startPath:n,accessPassword:s,accessKey:t},o=await fetch(e+"/caas_api/upload",{method:"POST",body:c,headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},uploadModelFromFiles:async function(a,n=""){let c=new FormData,i=0;for(let e=0;e<a.length;e++)c.append("files",fs.createReadStream(a[e])),i+=fs.statSync(a[e]).size;let o={webhook:r,rootFile:n,accessPassword:s,accessKey:t},d=await fetch(e+"/caas_api/uploadArray",{method:"POST",body:c,headers:{"CS-API-Arg":JSON.stringify(o)}});return{totalsize:i,data:await d.json()}},getUploadToken:async function(a,n=null){let c,i={webhook:r,accessPassword:s,accessKey:t,storageid:n};try{c=await fetch(e+"/caas_api/uploadToken/"+a,{headers:{"CS-API-Arg":JSON.stringify(i)}})}catch(a){return console.log(a),{ERROR:"Conversion Service can't be reached"}}return await c.json()},getDownloadToken:async function(a,r){let n,c={accessPassword:s,accessKey:t};try{n=await fetch(e+"/caas_api/downloadToken/"+a+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(c)}})}catch(a){return console.log(a),{ERROR:"Conversion Service can't be reached"}}return await n.json()},createEmptyModel:async function(a,n=null){let c=n||{},i={itemname:a,webhook:r,accessPassword:s,accessKey:t,startPath:c.startPath,processShattered:c.processShattered,conversionCommandLine:c.conversionCommandLine,skipConversion:c.skipConversion},o=await fetch(e+"/caas_api/create",{method:"put",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},reconvertModel:async function(a,r){let n=r||{},c={accessPassword:s,accessKey:t,startPath:n.startPath,multiConvert:n.multiConvert,conversionCommandLine:n.conversionCommandLine,processShattered:n.processShattered,overrideItem:n.overrideItem,waitUntilConversionDone:n.waitUntilConversionDone},i=await fetch(e+"/caas_api/reconvert/"+a,{method:"put",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},createCustomImage:async function(a,r){let n=r||{},c={accessPassword:s,accessKey:t,customImageCode:n.customImageCode,conversionCommandLine:n.conversionCommandLine},i=await fetch(e+"/caas_api/customImage/"+a,{method:"put",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getFileByType:async function(a,r,n=null){let c={accessPassword:s,accessKey:t},i=await fetch(e+"/caas_api/file/"+a+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(c)}});if(404==i.status)return{ERROR:"File not found"};{let a=await i.arrayBuffer();return n&&fs.writeFileSync(n,Buffer.from(a)),a}},getFileByName:async function(a,r,n=null){let c={accessPassword:s,accessKey:t},i=await fetch(e+"/caas_api/fileByName/"+a+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(c)}});if(404==i.status)return{ERROR:"File not found"};{let a=await i.arrayBuffer();return n&&fs.writeFileSync(n,Buffer.from(a)),a}},deleteModel:async function(a){let r={accessPassword:s,accessKey:t},n=await fetch(e+"/caas_api/delete/"+a,{method:"put",headers:{"CS-API-Arg":JSON.stringify(r)}});return await n.json()},getStreamingSession:async function(a,r=null){let n={accessPassword:s,accessKey:t,geo:a,renderType:r},c=await fetch(e+"/caas_api/streamingSession",{headers:{"CS-API-Arg":JSON.stringify(n)}});return await c.json()},enableStreamAccess:async function(a,r){let n={accessPassword:s,accessKey:t},c=await fetch(e+"/caas_api/enableStreamAccess/"+a,{method:"put",headers:{"CS-API-Arg":JSON.stringify(n),items:JSON.stringify(r)}});return await c.json()},getModels:async function(){let a={accessPassword:s,accessKey:t},r=await fetch(e+"/caas_api/items",{headers:{"CS-API-Arg":JSON.stringify(a)}});return await r.json()},getModelData:n,getStatus:async function(a){let r={accessPassword:s,accessKey:t},n=await fetch(e+"/caas_api/status"+(a?"/true":""),{headers:{"CS-API-Arg":JSON.stringify(r)}});return await n.json()},generateAPIKey:async function(a,r,n){let c={name:a,accessPassword:s,accessKey:t,email:r,password:n},i=await fetch(e+"/caas_api/generateAPIKey",{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},addUser:async function(a,r=1,n=void 0,c=void 0,i=void 0,o=void 0,d=void 0,y=void 0){let f=JSON.stringify({firstName:o,lastName:d,email:a,password:i,organizationID:y,role:r}),w={accessPassword:s,accessKey:t,email:n,password:c},l=await fetch(e+"/caas_api/addUser",{body:f,mode:"cors",method:"POST",headers:{"CS-API-Arg":JSON.stringify(w),"Content-type":"application/json; charset=UTF-8"}});return await l.json()},checkPassword:async function(a,r){let n={accessPassword:s,accessKey:t},c=await fetch(e+"/caas_api/checkPassword/"+a+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(n)}});return await c.json()},getUserInfo:async function(a,r){let n={accessPassword:s,accessKey:t},c=await fetch(e+"/caas_api/userInfo/"+a+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(n)}});return await c.json()},changeOrgName:async function(a,r,n,c){let i={accessPassword:s,accessKey:t},o=await fetch(e+"/caas_api/changeOrgName/"+a+"/"+r+"/"+n+"/"+c,{method:"put",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},retrieveInvite:async function(a){let r={accessPassword:s,accessKey:t},n=await fetch(e+"/caas_api/retrieveInvite/"+a,{headers:{"CS-API-Arg":JSON.stringify(r)}});return await n.json()},acceptInvite:async function(a,r){let n={accessPassword:s,accessKey:t},c=await fetch(e+"/caas_api/acceptInvite/"+a+(r?"/"+r:""),{method:"put",headers:{"CS-API-Arg":JSON.stringify(n)}});return await c.json()},getUsers:async function(a,r,n){let c={accessPassword:s,accessKey:t},i=await fetch(e+"/caas_api/getUsers/"+a+"/"+r+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},removeUser:async function(a,r,n=void 0,c=void 0){let i={accessPassword:s,accessKey:t,email:n,password:c},o=await fetch(e+"/caas_api/removeUser/"+a+"/"+r,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},updateUser:async function(a,r=void 0,n=void 0,c=void 0,i=void 0,o=void 0,d=void 0,y=void 0){let f=JSON.stringify({firstName:o,lastName:d,email:a,password:i,organizationID:y,role:r}),w={accessPassword:s,accessKey:t,email:n,password:c},l=await fetch(e+"/caas_api/updateUser",{body:f,mode:"cors",method:"POST",headers:{"CS-API-Arg":JSON.stringify(w),"Content-type":"application/json; charset=UTF-8"}});return await l.json()},addOrganization:async function(a,r,n){let c={accessPassword:s,accessKey:t,email:r,password:n},i=await fetch(e+"/caas_api/addOrganization/"+a,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getOrganizations:async function(a,r,n=!1){let c={accessPassword:s,accessKey:t,email:a,password:r},i=await fetch(e+"/caas_api/getOrganizations"+(n?"/"+n:""),{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getOrganization:async function(a,r,n){let c={accessPassword:s,accessKey:t,email:r,password:n},i=await fetch(e+"/caas_api/getOrganization/"+a,{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},switchOrganization:async function(a,r,n){let c={accessPassword:s,accessKey:t,email:r,password:n},i=await fetch(e+"/caas_api/switchOrganization/"+a,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getAPIKeys:async function(a,r){let n={accessPassword:s,accessKey:t,email:a,password:r},c=await fetch(e+"/caas_api/getAPIKeys",{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(n)}});return await c.json()},invalidateAPIKey:async function(a,r,n){let c={accessPassword:s,accessKey:t,email:r,password:n},i=await fetch(e+"/caas_api/invalidateAPIKey/"+a,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},editAPIKey:async function(a,r,n,c){let i={name:r,accessPassword:s,accessKey:t,email:n,password:c},o=await fetch(e+"/caas_api/editAPIKey/"+a,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},updateOrgTokens:async function(a,r,n,c){let i={accessPassword:s,accessKey:t,email:n,password:c},o=await fetch(e+"/caas_api/updateOrgTokens/"+a+"/"+r,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getStatsByMonth:async function(a,r,n,c,i){let o={accessPassword:s,accessKey:t,email:c,password:i},d=await fetch(e+"/caas_api/getStatsByMonth/"+a+"/"+r+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(o)}});return await d.json()},injectStats:async function(a,r,n,c){let i={stats:r,accessPassword:s,accessKey:t,email:n,password:c},o=await fetch(e+"/caas_api/injectStats/"+a,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()}}}},e={},s=function s(t){var r=e[t];if(void 0!==r)return r.exports;var n=e[t]={exports:{}};return a[t](n,n.exports,s),n.exports}(912);CaaS=s})();